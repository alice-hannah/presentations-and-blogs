---
title: "<img class='image1' src='../images/rap_hex.png' alt=''/>Reproducible Analytical Pipelines"
author: "Alice Hannah"
institute: "Data Innovation Team, Scottish Government"
date: "24 September 2025"
date-format: "D MMMM YYYY"
format:
  revealjs: 
    embed-resources: true
    slide-number: true
    preview-links: auto
    logo: ../images/SG-logo.jpg
    controls: true
    theme: [default, styles.scss]
lang: en
---

## Is RAP relevant to me?

::: {.incremental}

-   Would it be a nightmare to have to go back and rerun your data project from the beginning if you found a mistake?

-   Do you have to make a lot of manual edits to code before each run?

-   Is there a lot of repetition in your code?

-   Would a new person find it difficult to understand?

:::

::: notes
* At this stage of your accelerator projects, the answer might be no to most of these.
* However, I imagine you might be able to relate when thinking about other, longer term work projects.
* And hopefully, your accelerator projects will soon become one of these longer term work projects!
* Thinking about RAP early on in a project is a great way to future proof your work.
:::


## What is RAP? {.smaller}

* An overall approach to analysis
  
* A RAP will:

  * Improve the quality of the analysis
  * Increase trust in the analysis by producers, their managers and users
  * Create a more efficient process
  * Improve business continuity and knowledge management
  
::: footer
Source: [Government Analysis Function](https://analysisfunction.civilservice.gov.uk/support/reproducible-analytical-pipelines/)
:::

::: notes
* A RAP approach an be applied to all stages of analysis; data extraction, cleaning, analysis, modelling, visualisation and reporting.
:::


## RAP principles

<div style="line-height:50%;"><br></div>

:::: {.columns}

::: {.column width="50%"}
::: {.fragment .fade-in-then-semi-out}
1. Minimise manual steps
:::
::: {.fragment .fade-in-then-semi-out}
2. Be built using open-source software; e.g. R, Python
:::
::: {.fragment .fade-in-then-semi-out}
3. Be peer reviewed by colleagues
:::
::: {.fragment .fade-in-then-semi-out}
4. Be version controlled; e.g. Git
:::
:::

::: {.column width="50%"}
::: {.fragment .fade-in-then-semi-out}
5. Be open to anyone; e.g. code published on GitHub
:::
::: {.fragment .fade-in-then-semi-out}
6. Follow good practice for quality assurance
:::
::: {.fragment .fade-in-then-semi-out}
7. Contain well-commented code and have documentation embedded
:::
:::

::::

::: {.footer}
Source: [Government Analysis Function](https://analysisfunction.civilservice.gov.uk/support/reproducible-analytical-pipelines/)
:::

::: {.notes}
* To achieve these benefits, a RAP should...
* Examples of manual steps: creating new folders, copying and pasting data, restructuring data, updating parameters (year, geographies), creating outputs (charts, excel tables, reports, dashboards) 
:::


## Self-assessment tool

* [Scottish Government RAP Self-Assessment Tool](https://scotland.shinyapps.io/sg-rap-self-assessment/)

* Criteria categorised into 4 'levels': Aspiring, Fundamental, Intermediate and Advanced.

* Description and links to further resources for each criteria.

* Complete form and download report to track progress and inform next steps.

::: {.notes}
* Some of the 7 RAP principles are still quite high-level so we've broken this down further.
* The tool was developed internally to support Scottish Government analysts, however it is publicly available.
:::


## Example criteria

:::: {.columns}

::: {.column width="45%"}
<center>
[Aspiring RAP]{.blue}
<img class='icon' alt='' src='../images/icons/folder-tree-solid.svg'/>
Repository self-contained and <br>well-structured

<br>

::: {.fragment fragment-index=2}
[Intermediate RAP]{.blue}
<img class='icon' alt='' src='../images/icons/gears-solid.svg'/>
Functions used where appropriate
:::
</center>
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
<center>
::: {.fragment fragment-index=1}
[Fundamental RAP]{.blue}
<img class='icon' alt='' src='../images/icons/file-signature-solid.svg'/>
Code follows a style guide
:::

<br><br>

::: {.fragment fragment-index=3}
[Advanced RAP]{.blue}
<img class='icon' alt='' src='../images/icons/list-check-solid-full.svg'/>
Functions have unit tests
:::
</center>
:::

::::

::: {.footer}
[RAP Self-Assessment Tool](https://scotland.shinyapps.io/sg-rap-self-assessment/)
:::

::: {.notes}
* Organised folder/file structure with sensible names
* Following a style guide makes code easier to understand by others and maintain
* Using functions improves efficiency and understandability
* Testing functions improves quality
:::


## Top tips

* Start small and iterate (Agile project development helps here!)

* Share what you are doing and learn from others around you

* Find a critical friend who is willing to review your project

* Use an issues log to keep track and plan future improvements


## Links & Contact

-   [Government Analysis Function RAP Resources](https://analysisfunction.civilservice.gov.uk/support/reproducible-analytical-pipelines/)

-   [Scottish Government RAP Self-Assessment Tool](https://scotland.shinyapps.io/sg-rap-self-assessment/)

-   [Blog: How we saved 3 analysts 6 weeks of copying and pasting](https://blogs.gov.scot/statistics/2023/07/24/reproducible-analytical-pipelines-how-we-saved-3-analysts-6-weeks-of-copying-and-pasting/)

-   Email me ([alice.hannah\@gov.scot](mailto:alice.hannah@gov.scot))
