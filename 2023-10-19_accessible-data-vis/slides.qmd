---
title: "Accessible data visualisations"
subtitle: "Scottish Government Accessibility Champions Network"
author: "Alice Byers"
institute: "Data Innovation Team, Data Division"
date: "19 October 2023"
format:
  revealjs: 
    embed-resources: true
    slide-number: true
    logo: images/SG-logo.jpg
    controls: true
    link-external-newwindow: true
    theme: [default, styles.scss]
execute:
  echo: false
  fig-format: "svg"
lang: en
editor_options: 
  chunk_output_type: console
---

## About me

* [Reproducible Analytical Pipeline (RAP)](https://analysisfunction.civilservice.gov.uk/support/reproducible-analytical-pipelines/) developer

* Background in statistics and data analysis

* New to the Accessibility Champions Network

::: {.notes}
* Work with statisticians to improve their analytical processes and outputs
* Use R programming language to write code for data cleaning, analysis, visualisation and reporting.
* Worked on a project last year to support a team to develop a dashboard where I learned a lot about accessibility and how to make data visualisations accessible.
* Not an expert!
:::


## Agenda

* Examples of charts and common issues

* An introduction to the [sgplot R package](https://datasciencescotland.github.io/sgplot/)

* An overview of available guidance for making charts accessible


# Example {.h1-blue}

```{r run-examples}
if(!all(c(paste0("ex", 1:3, ".svg"), "table.html") %in%
        list.files("images/"))) {
  source("examples.R")
}
```

```{r alt-text}

ex1_alt <- paste(
  "A multiple line chart with year on x axis, life expectancy on y axis and",
  "separate countries with colour. The chart background is grey with white",
  "grid lines, and the data lines are turquoise and orange."
)

ex2_alt <- paste(
  "A multiple line chart with year on x axis, life expectancy on y axis and",
  "separate countries with colour. The chart background is grey with white",
  "grid lines, and the data lines are turquoise and orange."
)

ex3_alt <- paste(
  "A multiple line chart with year on x axis, life expectancy on y axis and",
  "separate countries with colour. The chart background is grey with white",
  "grid lines, and the data lines are turquoise and orange."
)
```

## Example 1 {.smaller auto-animate=true}

![](images/ex1.svg){fig-alt="`r ex1_alt`"}

[Slido poll](https://app.sli.do/event/pZMm3JwX6jxNQgE8Mn7FAu/live/polls){preview-link="true"}: What could be improved?


## Example 1 {auto-animate=true}

![](images/ex1.svg){fig-alt="`r ex1_alt`" .absolute top=25 right=5 width=500 height=250}

<br>
<br>
<br>

::: {.incremental}

* Cluttered; lots of grid lines, lots of colours, lots of data

* Poor colour contrast with background and with other colours

* Angled text not easy to read

:::

::: {.notes}
* Clutter
    * Difficult to pick out important features
    * Overwhelming

* Text
    * Angled text means you have to tilt your head to read
    * Labels don't make sense
:::


# Colour {.h1-blue}


## Things to think about


## Example 2 {.smaller auto-animate=true}

![](images/ex2.svg){fig-alt="`r ex2_alt`"}

[Slido poll](https://app.sli.do/event/pZMm3JwX6jxNQgE8Mn7FAu/live/polls){preview-link="true"}: What could be improved?


## Example 2 {auto-animate=true}

![](images/ex2.svg){fig-alt="`r ex2_alt`" .absolute top=25 right=5 width=500 height=250}

<br>
<br>
<br>

::: {.incremental}

* Meaningless axis label

* No way to link data lines to legend without colour

* No title, subtitle or source

:::

::: {.notes}

:::


## Example 3 {auto-animate=true .smaller}

### Living Longer
#### Life Expectancy in the United Kingdom and China 1952-2007

![](images/ex3.svg){fig-alt="`r ex3_alt`"}
<div class="source">Source: Gapminder</div>


# Alternative Text {.h1-blue}


## Forms of alt text

* Commonly sits in the code behind the chart to be read by screen reader software

::: {.incremental}

* However, it can also be:

    * a text description in the main body of the page
    
    * a table of the data presented in the chart

:::


## Text description

<br>

`r ex3_alt`


## Data table

````{=html}
```{r, echo=FALSE, results='asis'}
xfun::file_string('images/table.html')
```
````


# sgplot {.h1-blue}

# Guidance {.h1-blue}

# Contact

<alice.byers@gov.scot>

